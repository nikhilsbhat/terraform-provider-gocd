---
# generated by https://github.com/hashicorp/terraform-plugin-docs
page_title: "gocd_config_repository Resource - terraform-provider-gocd"
subcategory: ""
description: |-
  
---

# gocd_config_repository (Resource)
Creates config repos in GoCD with all below passed parameters by interacting with GoCD config repo [api](https://api.gocd.org/current/#config-repo).

## Example Usage
```terraform
resource "gocd_config_repository" "sample_config_repo" {
    profile_id = "sample_config_repo"
    plugin_id  = "yaml.config.plugin"
    configuration {
        key   = "username"
        value = "admin"
    }
    material {
        type = "git"
        attributes {
            url         = "https://github.com/config-repo/gocd-json-config-example.git"
            username    = "bob"
            password    = "aSdiFgRRZ6A="
            branch      = "master"
            auto_update = false
        }
    }
    rules = [
        {
            "directive" : "allow",
            "action" : "refer",
            "type" : "pipeline_group",
            "resource" : "*"
        }
    ]
}
```

## Importing the existing config repo to Terraform State
```terraform
resource "gocd_config_repository" "sample_config_repo" {
    profile_id = "sample_config_repo"
}
```

```shell
# Once the above code is added, the resource can be imported by running the below command.
terraform import gocd_config_repository.sample_config_repo sample_config_repo
```

<!-- schema generated by tfplugindocs -->
## Schema

### Required

- `configuration` (Block Set, Min: 1) the list of configuration properties that represent the configuration of this profile. (see [below for nested schema](#nestedblock--configuration))
- `material` (Block Set, Min: 1) The material to be used by the config repo. (see [below for nested schema](#nestedblock--material))
- `plugin_id` (String) The name of the config repo plugin.
- `profile_id` (String) The identifier of the config repository.

### Optional

- `rules` (List of Map of String) The list of rules, which allows restricting the entities that the config repo can refer to.

### Read-Only

- `etag` (String) Etag used to track the config repository.
- `id` (String) The ID of this resource.

<a id="nestedblock--configuration"></a>
### Nested Schema for `configuration`

Required:

- `key` (String) the name of the property key.

Optional:

- `encrypted_value` (String) The encrypted value of the property
- `is_secure` (Boolean) Specify whether the given property is secure or not. If true and encrypted_value is not specified, GoCD will store the value in encrypted format.
- `value` (String) The value of the property


<a id="nestedblock--material"></a>
### Nested Schema for `material`

Required:

- `attributes` (Block Set, Min: 1) The attributes for each material type. (see [below for nested schema](#nestedblock--material--attributes))
- `type` (String) The type of a material. Can be one of git, svn, hg, p4, tfs.

Optional:

- `fingerprint` (String) The fingerprint of the material.

<a id="nestedblock--material--attributes"></a>
### Nested Schema for `material.attributes`

Optional:

- `auto_update` (Boolean) Whether to poll for new changes or not.
- `branch` (String) The mercurial branch to build.
- `check_externals` (Boolean) Whether the changes o the externals will trigger the pipeline automatically or not.
- `destination` (String) The directory (relative to the pipeline directory) in which source code will be checked out.
- `domain` (String) The domain name for TFS authentication credentials.
- `encrypted_password` (String) The encrypted password for the specified user.
- `filter` (Block Set) The filter specifies files in changesets that should not trigger a pipeline automatically. (see [below for nested schema](#nestedblock--material--attributes--filter))
- `ignore_for_scheduling` (Boolean) Whether the pipeline should be triggered when there are changes in this material.
- `invert_filter` (Boolean) Invert filter to enable whitelist.
- `name` (String) The name of this material.
- `password` (String) The password for the specified user.
- `pipeline` (String) The name of a pipeline that this pipeline depends on.
- `port` (String) Perforce server connection to use ([transport:]host:port).
- `project_path` (String) The project path within the TFS collection.
- `ref` (String) The unique package repository id.
- `stage` (String) The name of a stage which will trigger this pipeline once it is successful.
- `url` (String) The URL of the subversion repository.
- `use_tickets` (Boolean) Whether to work with the Perforce tickets or not.
- `username` (String) The user account for the remote repository.
- `view` (String) The Perforce view.

<a id="nestedblock--material--attributes--filter"></a>
### Nested Schema for `material.attributes.filter`

Optional:

- `ignore` (List of String) Invert filter to enable whitelist.


